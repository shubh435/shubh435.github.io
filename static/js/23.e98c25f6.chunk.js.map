{"version":3,"file":"static/js/23.e98c25f6.chunk.js","mappings":"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","sources":["components/AboutUs.tsx","utils/utils.ts","components/Slider.tsx","components/ThreeJS3DCard.tsx","components/Project.tsx","components/LampEffect.tsx","components/SkillSection.tsx","routes/Dashboard/index.tsx"],"sourcesContent":["import { Box, Container, Typography } from \"@mui/material\";\nimport React from \"react\";\ninterface AboutUsProps {}\n\ninterface AboutUsState {}\n\nclass AboutUs extends React.Component<AboutUsProps, AboutUsState> {\n  constructor(props: AboutUsProps) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <Box id=\"about\" className=\"bg-[#f5f5f5] w-full mb-0\">\n        <Container\n          component={\"section\"}\n          className=\"about-me \"\n          sx={{\n            minHeight: 300,\n            display: \"flex\",\n            justifyContent: \"space-around\",\n            alignItems: \"center\",\n            flexDirection: \"column\",\n          }}\n        >\n          <Typography component={\"h2\"} variant=\"h2\">\n            About Me\n          </Typography>\n          <Box className=\"about-me-content\">\n            <Typography component={\"p\"}>\n              I am Shubham Sarode, a Software Engineer with 3+ years of\n              experience in front end development, specializing in React JS,\n              React Native, and Redux. I hold a Master’s degree in Computer\n              Science from North Maharashtra University and a Bachelor’s degree\n              from RTMNU University. I have a strong track record in designing\n              responsive web and mobile applications, improving code\n              reusability, and streamlining state management. My projects\n              include Parents Who Date, a React Native app for single parents,\n              and Fudu, a platform blending features from Zomato and Instagram.\n              Proficient in TypeScript, Jest, and Enzyme, I ensure high code\n              quality and performance. Im passionate about delivering innovative\n              solutions that enhance user experience and exceed client\n              expectations. Lets collaborate to bring your ideas to life!\n            </Typography>\n          </Box>\n        </Container>\n      </Box>\n    );\n  }\n}\n\nexport default AboutUs;\n","export  const navigateTo = (text: string,navigate:(text:string)=>void) => {\n    if (text.includes(\"http\")) {\n      window.open(text, \"_blank\");\n      return false;\n    }\n    navigate(text);\n  };\n","import { Box, Button, Container, Grid, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport * as THREE from \"three\";\nimport { RoomEnvironment } from \"three/examples/jsm/environments/RoomEnvironment.js\";\nimport { globImage, starImage } from \"../assets/assets\";\nimport { IoIosEye } from \"react-icons/io\";\nimport withRouter from \"../utils/withRouter\";\nimport { navigateTo } from \"../utils/utils\";\nimport \"./style.css\";\ninterface SliderProps {\n  navigate: (text: string) => void;\n}\n\nconst startRotaionTimeX = 0.0001;\nconst startRotaionTimeY = 0.0001;\nconst speedRotaionTimeGlobeY = 0.005;\nconst speedRotaionTimeGlobeX = 0.005;\n\ninterface SliderState { }\n\nclass Slider extends React.PureComponent<SliderProps, SliderState> {\n  starsRef: React.RefObject<HTMLDivElement>;\n  globeRef: React.RefObject<HTMLDivElement>;\n\n  constructor(props: SliderProps) {\n    super(props);\n    this.state = {};\n    this.starsRef = React.createRef();\n    this.globeRef = React.createRef();\n  }\n\n  generateStars = () => {\n    const camera = new THREE.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      1000\n    );\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.outputEncoding = THREE.sRGBEncoding;\n    this.starsRef.current?.appendChild(renderer.domElement);\n\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x000000);\n\n    // Load the star texture\n    const textureLoader = new THREE.TextureLoader();\n    const starTexture = textureLoader.load(starImage);\n\n    const starGeometry = new THREE.BufferGeometry();\n    const starMaterial = new THREE.PointsMaterial({\n      map: starTexture,\n      size: 1, // Adjust the size as needed\n      transparent: true, // Ensure transparency is handled if your texture has alpha\n      alphaTest: 0.1, // Threshold for alpha transparency\n    });\n\n    const starVertices = [];\n    for (let i = 0; i < 10000; i++) {\n      const x = THREE.MathUtils.randFloatSpread(2000);\n      const y = THREE.MathUtils.randFloatSpread(2000);\n      const z = THREE.MathUtils.randFloatSpread(2000);\n\n      starVertices.push(x, y, z);\n    }\n\n    starGeometry.setAttribute(\n      \"position\",\n      new THREE.Float32BufferAttribute(starVertices, 3)\n    );\n    const stars = new THREE.Points(starGeometry, starMaterial);\n    scene.add(stars);\n\n    camera.position.z = 1;\n\n    function animateStars() {\n      requestAnimationFrame(animateStars);\n      stars.rotation.x += startRotaionTimeX;\n      stars.rotation.y += startRotaionTimeY;\n      renderer.render(scene, camera);\n    }\n\n    animateStars();\n  };\n\n  renderGlobe = () => {\n    const camera = new THREE.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      1000\n    );\n    const renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n    renderer.setSize(window.innerWidth / 1.5, window.innerHeight / 1.5); // Increase size of renderer\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.outputEncoding = THREE.sRGBEncoding;\n    this.globeRef.current?.appendChild(renderer.domElement);\n\n    const pmremGenerator = new THREE.PMREMGenerator(renderer);\n    const scene = new THREE.Scene();\n    scene.environment = pmremGenerator.fromScene(\n      new RoomEnvironment(),\n      0.04\n    ).texture;\n\n    // Create a sphere geometry for the globe with increased radius\n    const geometry = new THREE.SphereGeometry(2, 32, 32); // Increase the size from 1 to 2\n\n    // Load a texture for the globe\n    const textureLoader = new THREE.TextureLoader();\n    const texture = textureLoader.load(globImage, () => {\n      renderer.render(scene, camera);\n    });\n\n    const material = new THREE.MeshStandardMaterial({ map: texture });\n    const globe = new THREE.Mesh(geometry, material);\n    scene.add(globe);\n\n    camera.position.set(0, 0, 5); // Adjust camera position for larger globe\n\n    let mouseX = 0;\n    let mouseY = 0;\n\n    const onMouseMove = (event: MouseEvent) => {\n      mouseX = (event.clientX / window.innerWidth) * 2 - 1;\n      mouseY = -(event.clientY / window.innerHeight) * 2 + 1;\n    };\n\n    window.addEventListener(\"mousemove\", onMouseMove);\n\n    // On window resize\n    window.addEventListener(\"resize\", () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth / 1.5, window.innerHeight / 1.5);\n    });\n\n    // Function to animate\n    function animateGlobe() {\n      requestAnimationFrame(animateGlobe);\n      globe.rotation.x += mouseY * speedRotaionTimeGlobeX;\n      globe.rotation.y += mouseX * speedRotaionTimeGlobeY;\n      renderer.render(scene, camera);\n    }\n\n    animateGlobe();\n  };\n\n  componentDidMount(): void {\n    this.generateStars();\n    this.renderGlobe();\n  }\n\n  render() {\n    return (\n      <Box\n        sx={{ position: \"relative\", background: \"#000000\", overflow: \"hidden\" }}\n        id=\"/\"\n      >\n        <Box\n          ref={this.starsRef}\n          sx={webstyle.starContainer}\n        />\n        <Container\n          sx={webstyle.container}\n        >\n          <Grid container>\n            <Grid item lg={2} md={2} component={\"section\"}></Grid>\n            <Grid item lg={4} md={4} sm={12} sx={{ m: \"auto\" }} component={\"section\"}>\n              <Box color=\"#fff\" sx={{ width: \"100%\", zIndex: 10000 }}>\n                <Typography component={\"p\"}>Hello, I'm</Typography>\n                <Typography\n                  component={\"h1\"}\n                  variant=\"h1\"\n                  className=\"my-heading-text-shubham !text-[2.4rem]\"\n                >\n                  Shubham Sarode\n                </Typography>\n                <Typography component={\"p\"}>\n                  A passionate Software Engineer with 3 years of front-end development expertise,\n                   focused on building dynamic, user-friendly web and mobile applications. \n                  Always eager to take on new challenges and create impactful digital experiences.\n                </Typography>\n                <Box\n                  sx={webstyle.buttonStyle}\n                >\n                  <Button\n                    variant=\"outlined\"\n                    sx={webstyle.button}\n                    onClick={() =>\n                      navigateTo(\n                        \"https://drive.google.com/file/d/1jj2iw1bHdgiWZ-DPCCIwxll1guDj43VK/view?usp=sharing\",\n                        this.props.navigate\n                      )\n                    }\n                  >\n                    Hire me\n                  </Button>\n                  <Button\n                    variant=\"outlined\"\n                    sx={webstyle.buttonStyle1}\n                    onClick={() => navigateTo(\"/project\", this.props.navigate)}\n                  >\n                    <span>Projects</span> <IoIosEye color={\"#FFF\"} size={20} />\n                  </Button>\n                </Box>\n              </Box>\n            </Grid>\n            <Grid item lg={6} md={6} sm={12} sx={{ m: \"auto\" }} component={\"section\"} >\n              <Box\n                sx={webstyle.globContainer}\n              >\n                <Box\n                  ref={this.globeRef}\n                  sx={{\n                    zIndex: 10, // Ensure the globe is on top\n                  }}\n                />\n              </Box>\n            </Grid>\n          </Grid>\n        </Container>\n      </Box>\n    );\n  }\n}\n\nexport default withRouter(Slider);\nconst webstyle = {\n  buttonStyle1:{\n    display: \"flex\",\n    justifyContent: \"center\",\n    gap: 1,\n  },\n  globContainer:{\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"100%\",\n    height: \"100%\", \n    position: \"relative\",\n  },\n  button:{\n    display: \"flex\",\n    justifyContent: \"center\",\n    color: \"#fff\",\n  },\n  buttonStyle:{\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    gap: 2,\n    mt: 3,\n  },\n  starContainer: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n    zIndex: 0,\n  },\n  container: {\n    position: \"relative\",\n    mx: \"auto\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    textAlign: \"left\",\n    background: \"transparent\",\n    minHeight: \"100vh\",\n    justifyContent: \"space-between\",\n    overflow: \"hidden\",\n    zIndex: 10,\n  }\n}","import React from 'react';\nimport withRouter from '../utils/withRouter';\n\ninterface ThreeDCardProps {\n  title?: string;\n  description?: string;\n  imageUrl?: string;\n  id: number,\n  moreDes?: string,\n  subheader?: string,\n  tryLink?: string,\n  sorceCodeLink?: string,\n  rating?: number\n  navigate?:(text?:string) => void\n}\n\nconst ThreeDCard: React.FC<ThreeDCardProps> = ({ title, description, imageUrl ,tryLink,sorceCodeLink,navigate}) => {\n  return (\n    <div className=\"preview \">\n    <div className=\" flex items-center justify-center\" style={{ perspective: '1000px' }}>\n      <div className=\"flex items-center justify-center relative transition-all duration-200 ease-linear inter-var\" style={{ transformStyle: 'preserve-3d', transform: 'rotateY(0deg) rotateX(0deg)' }}>\n        <div className=\"[transform-style:preserve-3d] bg-gray-50 relative group/card dark:hover:shadow-2xl\n         dark:hover:shadow-emerald-500/[0.1] dark:bg-black dark:border-white/[0.2]\n          border-black/[0.1]\n        w-full h-auto \n         rounded-xl p-6 border\">\n          <div className=\"w-fit transition duration-200 ease-linear text-xl font-bold text-neutral-600 dark:text-white\">\n            {title}\n          </div>\n          <p className=\"w-fit transition duration-200 ease-linear text-neutral-500 text-sm max-w-sm mt-2 dark:text-neutral-300\">\n            {description}\n          </p>\n          <div className=\"transition duration-200 ease-linear w-full mt-4\">\n            <img\n              alt=\"shubham\"\n              loading=\"lazy\"\n              width=\"1000\"\n              height=\"1000\"\n              decoding=\"async\"\n              className=\"h-60 w-full object-cover rounded-xl group-hover/card:shadow-xl\"\n              src={imageUrl}\n              style={{ color: 'transparent' }}\n            />\n          </div>\n          <div className=\"flex justify-between items-center mt-20\">\n            <a\n              className=\"w-fit transition duration-200 ease-linear px-4 py-2 rounded-xl text-xs font-normal dark:text-white\"\n              target=\"__blank\"\n              href={tryLink}\n              style={{ transform: 'translateX(0px) translateY(0px) translateZ(0px) rotateX(0deg) rotateY(0deg) rotateZ(0deg)' }}\n            >\n              Try now →\n            </a>\n            <button\n              className=\"w-fit transition duration-200 ease-linear px-4 py-2 rounded-xl bg-black dark:bg-white dark:text-black text-white text-xs font-bold\"\n              style={{ transform: 'translateX(0px) translateY(0px) translateZ(0px) rotateX(0deg) rotateY(0deg) rotateZ(0deg)' }}\n              onClick={()=>navigate && navigate(sorceCodeLink)}\n            >\n              Github\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  );\n}\n\nexport default withRouter(ThreeDCard);","import { Box, Button, Container, Grid, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { ProjectData, projectdata } from \"../assets/data\";\nimport { navigateTo } from \"../utils/utils\";\nimport withRouter from \"../utils/withRouter\";\nimport ThreeDCard from \"./ThreeJS3DCard\";\nimport \"./LampEffect.css\";\n\ninterface ProjectProps {\n  navigate: (text: string) => void;\n}\n\ninterface ProjectState {\n  projectData: ProjectData[];\n}\n\nclass Project extends React.PureComponent<ProjectProps, ProjectState> {\n  constructor(props: ProjectProps) {\n    super(props);\n    this.state = {\n      projectData: projectdata,\n    };\n  }\n  componentDidMount(): void {\n    this.setState({ projectData: projectdata });\n  }\n\n  render() {\n    const sortedArray = this.state.projectData.sort((item1, item2) => item2.rating - item1.rating)\n    return (\n      <section\n        className={`bg-transparent back-imag-setup\n       bg-fixed bg-center bg-no-repeat bg-cover py-4 m-0`}\n      >\n        <Container component={\"section\"} className=\"about-me\">\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              marginBottom: 2,\n              width: \"100%\",\n            }}\n          >\n            <Typography\n              component={\"h2\"}\n              className=\"text-white\"\n              variant=\"h2\"\n              m={1}\n            >\n              Project\n            </Typography>\n            <Button\n              onClick={() => navigateTo(\"/project\", this.props.navigate)}\n              variant=\"contained\"\n            >\n              View all\n            </Button>\n          </Box>\n          <Grid container spacing={4} className=\"about-me-content\" >\n            {this.state.projectData.length > 0 ? (\n              sortedArray.slice(0,3).map((projectdata, index) => {\n                  return (\n                    <Grid item lg={4} md={6} sm={12} xs={12}>\n                      <ThreeDCard\n                        {...projectdata}\n                        title={projectdata.projectName}\n                        description={projectdata.description}\n                        imageUrl={projectdata.porjectImage}\n                      />\n                    </Grid>\n                  );\n                })\n            ) : (\n              <Typography component={\"p\"}>No project found</Typography>\n            )}\n          </Grid>\n        </Container>\n      </section>\n    );\n  }\n}\n\nexport default withRouter(Project);\n","import React from 'react';\nimport './LampEffect.css';\ninterface IProps{\nlabel:string\n}\nconst LampEffect:React.FC<IProps> = ({label}) => {\n  return (\n    <section className=\"lamp-container\">\n      <div className=\"lamp-light\"></div>\n      <div className=\"lamp-text\">\n        <h3 className='uppercase text-white '>{label}</h3>\n      </div>\n    </section>\n  );\n};\n\nexport default LampEffect;","// SkillSection.js\nimport React from \"react\";\nimport { Box, Typography, Grid, Container } from \"@mui/material\";\nimport LampEffect from \"./LampEffect\";\n\nconst skills = [\n  \"React\",\n  \"React Native\",\n  \"jest\",\n  \"enzyme\",\n  \"HTML\",\n  \"CSS\",\n  \"JavaScript\",\n  \"Typescript\",\n  \"Node.js\",\n  \"express.js\",\n  \"Electron.js\",\n  \"git\",\n\n  // add more skills as needed\n];\n\nconst SkillSection = () => {\n  return (\n    <Box\n      sx={{\n        padding: 3,\n        backgroundColor: \"#f5f5f5\",\n      }}\n      id=\"skill\"\n\n    >\n      <Container component={\"section\"}>\n        <Typography\n          component={\"h2\"}\n          variant=\"h2\"\n          gutterBottom\n          textTransform={\"uppercase\"}\n        >\n          Skills\n        </Typography>\n        <Grid container spacing={4}  component={\"div\"}>\n          {skills.map((skill) => (\n            <Grid item key={skill} xs={6} sm={4} md={3} lg={3}  >\n              <LampEffect label={skill} />\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    </Box>\n  );\n};\n\nexport default SkillSection;\n","import React from \"react\";\nimport AboutUs from \"../../components/AboutUs\";\nimport Slider from \"../../components/Slider\";\nimport Project from \"../../components/Project\";\nimport SkillSection from \"../../components/SkillSection\";\nimport { Helmet } from \"react-helmet\";\ninterface DashboardProps {}\n\ninterface DashboardState {}\n\nclass Dashboard extends React.Component<DashboardProps, DashboardState> {\n  constructor(props: DashboardProps) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <>\n       <Helmet>\n          <title>Shubham Sarode | Software Engineer</title>\n          <meta\n            name=\"description\"\n            content=\"Welcome to Shubham Sarode's portfolio. Explore projects, skills, and professional journey of a Software Engineer specializing in React, React Native, and web development.\"\n          />\n          <meta\n            name=\"keywords\"\n            content=\"Shubham Sarode, Software Engineer, React, React Native, Web Development, Portfolio\"\n          />\n          <meta name=\"author\" content=\"Shubham Sarode\" />\n          <link rel=\"canonical\" href=\"https://shubh435.github.io/\" />\n          <meta property=\"og:title\" content=\"Shubham Sarode | Software Engineer\" />\n          <meta property=\"og:description\" content=\"Explore the professional portfolio of Shubham Sarode, a Software Engineer with expertise in React, React Native, and web development.\" />\n          <meta property=\"og:url\" content=\"https://shubh435.github.io/\" />\n          <meta property=\"og:type\" content=\"website\" />\n          <meta property=\"og:image\" content=\"https://shubh435.github.io/shubham-image.jpg\" />\n          <meta name=\"twitter:card\" content=\"summary_large_image\" />\n          <meta name=\"twitter:title\" content=\"Shubham Sarode | Software Engineer\" />\n          <meta name=\"twitter:description\" content=\"Explore the professional portfolio of Shubham Sarode, specializing in web and mobile app development.\" />\n          <meta name=\"twitter:image\" content=\"https://shubh435.github.io/shubham-image.jpg\" />\n        </Helmet>\n\n        <Slider />\n        <AboutUs />\n        <SkillSection />\n        <Project />\n      </>\n    );\n  }\n}\n\nexport default Dashboard;\n"],"names":["AboutUs","React","constructor","props","super","this","state","render","_jsx","Box","id","className","children","_jsxs","Container","component","sx","minHeight","display","justifyContent","alignItems","flexDirection","Typography","variant","navigateTo","text","navigate","includes","window","open","Slider","starsRef","globeRef","generateStars","_this$starsRef$curren","camera","THREE","innerWidth","innerHeight","renderer","antialias","setSize","setPixelRatio","devicePixelRatio","outputEncoding","current","appendChild","domElement","scene","background","starTexture","load","starImage","starGeometry","starMaterial","map","size","transparent","alphaTest","starVertices","i","x","randFloatSpread","y","z","push","setAttribute","stars","add","position","animateStars","requestAnimationFrame","rotation","renderGlobe","_this$globeRef$curren","alpha","pmremGenerator","environment","fromScene","RoomEnvironment","texture","geometry","globImage","material","globe","set","mouseX","mouseY","addEventListener","event","clientX","clientY","aspect","updateProjectionMatrix","animateGlobe","componentDidMount","overflow","ref","webstyle","starContainer","container","Grid","item","lg","md","sm","m","color","width","zIndex","buttonStyle","Button","button","onClick","buttonStyle1","IoIosEye","globContainer","withRouter","gap","height","mt","top","left","mx","textAlign","_ref","title","description","imageUrl","tryLink","sorceCodeLink","style","perspective","transformStyle","transform","alt","loading","decoding","src","target","href","Project","projectData","projectdata","setState","sortedArray","sort","item1","item2","rating","marginBottom","spacing","length","slice","index","xs","ThreeDCard","projectName","porjectImage","label","skills","SkillSection","padding","backgroundColor","gutterBottom","textTransform","skill","LampEffect","Dashboard","_Fragment","Helmet","name","content","rel","property"],"sourceRoot":""}